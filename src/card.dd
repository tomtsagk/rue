(include "card.ddh")

(class_function Card void create (group)
	(group

	(= this.id 0)
	(dd_matrix_identity this.target)

	(= this.hidden 0)

	(= this.font 0)

	(= this.mesh 0)
	(= this.meshBack 0)

	# fake stats
	(= this.idFake -1)
	(= this.meshFake 0)

	)
)

# draw the card with its transformation matrix
(class_function Card void draw (group)
	(group
	(dd_matrix_push)
	(this.applyMatrix)
	(this.drawRaw)
	(dd_matrix_pop)
	)
)

(class_function Card void clean (group)
	(group
	)
)

# apply the card's matrix
(class_function Card void applyMatrix (group)
	(group
	(dd_multMatrixf this)
	)
)

# draw the card's mesh with no transformation
(class_function Card void drawRaw (group)
	(group
	(if (== this.hidden 0)
		(this.mesh.draw)
	)
	(this.meshBack.draw)
	)
)

(class_function Card void setId (group int givenId)
	(group

	(= this.id givenId)

	(if (== this.id 0)
		(= this.cardDescription "move the rose 1 step")
	(== this.id 1)
		(= this.cardDescription "move the rose 3 steps")
	(== this.id 2)
		(= this.cardDescription (multistring
			"The rose player grabs the rose then"
			"give a card to the rose player and "
			"receive a random card back then "
			"move the rose 1 step "
			)
		)
	(== this.id 3)
		(= this.cardDescription (multistring
			"if the previous player is the flirt "
			"move the Rose 1 step "
			"otherwise "
			"move the Rose 3 steps"
			)
		)
	(== this.id 4)
		(= this.cardDescription (multistring
			"draw 1 card then "
			"discard this card to "
			"plan and execute "
			"another card"
			)
		)
	(== this.id 5)
		(= this.cardDescription (multistring
			"if the rose is in front of "
			"you grab it otherwise "
			"move the rose 1 step then "
			"the rose player "
			"grabs the rose"
			)
		)
	(== this.id 6)
		(= this.cardDescription (multistring
			"the rose player "
			"grabs the rose"
			)
		)
	(== this.id 7)
		(= this.cardDescription (multistring
			"if you are not "
			"the rose player then "
			"move the rose 1 step "
			"otherwise "
			"move the rose 3 steps"
			)
		)
	(== this.id 8)
		(= this.cardDescription (multistring
			"if you are holding "
			"the rose then "
			"discard 1 card -"
			"move the rose 1 step"
			)
		)
	# rose
	(== this.id 9)
		(= this.cardDescription (multistring
			"a beautiful red rose that smells amazing"
			)
		)
	# tutorial - initialisation
	(== this.id 10)
		(= this.cardDescription (multistring
			"During initialisation every player draws 5 cards "
			"and one player gets the rose card in front of them."
			)
		)
	# tutorial - planning
	(== this.id 11)
		(= this.cardDescription (multistring
			"In the planning phase starting with the player with the rose "
			"every player picks a card and plans it face down on the table"
			)
		)
	# tutorial - user's turn
	(== this.id 12)
		(= this.cardDescription (multistring
			"The rose always moves clockwise."
			"If a player holds the rose moving it one step will "
			"make it move in front of that player"
			)
		)
	# tutorial - execution
	(== this.id 13)
		(= this.cardDescription (multistring
			"In the execution phase starting with the player with the rose,"
			"reveal each card and execute its effect"
			)
		)
	# tutorial - end
	(== this.id 14)
		(= this.cardDescription (multistring
			"In the end phase every player draws one card except the "
			"player with the rose If a player has 2 or less cards in their hand "
			"they win"
			)
		)
	# tutorial - ai 1
	(== this.id 15)
		(= this.cardDescription (multistring
			"The first enemy is called the childish king "
			"he will only play a card to move the rose one step"
			)
		)
	# tutorial - ai 2
	(== this.id 16)
		(= this.cardDescription (multistring
			"The second enemy is called the blurry scream "
			"it will only play a card to move the rose three steps"
			)
		)
	# hold one step
	(== this.id 17)
		(= this.cardDescription (multistring
			"If the Flirt is holding the Rose move it two steps "
			"otherwise move it one step"
			)
		)
	# next hand
	(== this.id 18)
		(= this.cardDescription (multistring
			"If the Flirt is holding the Rose move it two steps "
			"and the Flirt now grabs the Rose"
			)
		)
	# ignore move
	(== this.id 19)
		(= this.cardDescription (multistring
			"Ignore the effect of the next card and move the "
			"Rose one step"
			)
		)
	# rose held steal
	(== this.id 20)
		(= this.cardDescription (multistring
			"If the Rose is held take a random card from the Flirt. "
			"If the Rose was picked move it two steps."
			)
		)
	# empty
	(== this.id 21)
		(= this.cardDescription (multistring
			"This card does nothing"
			)
		)
	# else
		(= this.cardDescription "no description")
	)

	)
)

(class_function Card void setFakeId (group int givenId dd_meshTexture mesh)
	(group
	(= this.idFake this.id)
	(this.setId givenId)
	(= this.meshFake this.mesh)
	(= this.mesh mesh)
	)
)

(class_function Card void clearFakeId (group)
	(group
	(if (>= this.idFake 0)
		(group
		(this.setId this.idFake)
		(= this.idFake -1)
		)
	)

	(if this.meshFake
		(group
		(= this.mesh this.meshFake)
		(= this.meshFake 0)
		)
	)

	)
)

(class_function Card int getId ()
	(group
	(if (>= this.idFake 0)
		(return this.idFake)
		(return this.id)
	)
	)
)
