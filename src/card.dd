(include "card.ddh")

(class_function Card void create (group)
	(group

	(= this.id 0)
	(dd_matrix_identity this.target)

	(= this.hidden 0)

	(= this.font 0)

	)
)

# draw the card with its transformation matrix
(class_function Card void draw (group)
	(group
	(dd_matrix_push)
	(this.applyMatrix)
	(this.drawRaw)
	(dd_matrix_pop)
	)
)

(class_function Card void clean (group)
	(group
	)
)

# apply the card's matrix
(class_function Card void applyMatrix (group)
	(group
	(dd_multMatrixf this)
	)
)

# draw the card's mesh with no transformation
(class_function Card void drawRaw (group)
	(group
	(if (== this.hidden 0)
		(this.mesh.draw)
	)
	(this.meshBack.draw)

	# draw card's text
	(if (&& this.font (== this.hidden 0))
		(group
		(dd_translatef 0 -0.12 0.01)
		(dd_scalef 0.05 0.05 0.01)
		(this.font.draw "card text")
		)
	)

	)
)
