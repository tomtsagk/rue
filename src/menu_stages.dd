(include "menu_stages.ddh")

(def extern int numberOfPlayers)
(def extern int startingPlayer)
(def extern int guide)
(def extern int playerAi[5])
(def extern int stageId)

(class_function menu_stages void create ()
	(group

	# localisation
	#(this.localisation.set "menu_copy")

	# font
	(this.font.setAlign DD_STRING3D_ALIGN_CENTER)
	(this.font.setColorFront 0.8 0.8 0.8)
	(this.font.setColorBack 0.3 0.3 0.3)

	# buttons
	(= this.buttonTotal 6)
	(this.button[0].mesh.load (asset "assets/button.asset" DD_PLY))
	(this.button[0].setSize 1 1)
	(this.button[0].setProportionalPosition 0.25 0.75)
	(this.button[0].setProportionalWidth 0.25)
	(this.button[0].setProportionalSize 0.8)

	(this.button[1].mesh.load (asset "assets/button.asset" DD_PLY))
	(this.button[1].setSize 1 1)
	(this.button[1].setProportionalPosition 0.5 0.75)
	(this.button[1].setProportionalWidth 0.25)
	(this.button[1].setProportionalSize 0.8)
	(if (== (this.saveLoad.IsStageComplete 0) 0)
		(this.button[1].disable)
	)

	(this.button[2].mesh.load (asset "assets/button.asset" DD_PLY))
	(this.button[2].setSize 1 1)
	(this.button[2].setProportionalPosition 0.75 0.75)
	(this.button[2].setProportionalWidth 0.25)
	(this.button[2].setProportionalSize 0.8)
	(if (== (this.saveLoad.IsStageComplete 1) 0)
		(this.button[2].disable)
	)

	(this.button[3].mesh.load (asset "assets/button.asset" DD_PLY))
	(this.button[3].setSize 1 1)
	(this.button[3].setProportionalPosition 0.25 0.45)
	(this.button[3].setProportionalWidth 0.25)
	(this.button[3].setProportionalSize 0.8)
	(if (== (this.saveLoad.IsStageComplete 2) 0)
		(this.button[3].disable)
	)

	(this.button[4].mesh.load (asset "assets/button.asset" DD_PLY))
	(this.button[4].setSize 1 1)
	(this.button[4].setProportionalPosition 0.5 0.45)
	(this.button[4].setProportionalWidth 0.25)
	(this.button[4].setProportionalSize 0.8)
	(if (== (this.saveLoad.IsStageComplete 3) 0)
		(this.button[4].disable)
	)

#	(this.button[5].mesh.load (asset "assets/button.asset" DD_PLY))
#	(this.button[5].setSize 1 1)
#	(this.button[5].setProportionalPosition 0.75 0.45)
#	(this.button[5].setProportionalWidth 0.25)
#	(this.button[5].setProportionalSize 0.8)
#	(if (== (this.saveLoad.IsStageComplete 4) 0)
#		(this.button[5].disable)
#	)

	(this.button[5].mesh.load (asset "assets/button.asset" DD_PLY))
	(this.button[5].setSize 1 1)
	(this.button[5].setProportionalPosition 0.16 0.15)
	(this.button[5].setProportionalWidth 0.25)

	# text display
	(this.textButton.setSize 1 1)
	(this.textButton.setProportionalPosition 0.5 0.15)
	(this.textButton.setProportionalWidth 0.2)

	(= this.selection 0)
	(= this.selectionClick -1)
	#(= this.isMovingToNewWorld 0)

	(this.buttonProgram.setVertexShader
		(multistring
			"AVDL_IN vec4 position;\n"
			"AVDL_IN vec3 colour;\n"
			"AVDL_IN vec2 texCoord;\n"

			"uniform mat4 matrix;\n"
			"uniform vec3 tint;\n"

			"AVDL_OUT vec2 outTexCoord;\n"
			"AVDL_OUT vec4 outColour;\n"

			"void main() {\n"
			"	vec4 pos = matrix *position;\n"
			"       gl_Position = pos;\n"
			"       outColour = vec4(colour.rgb *tint.rgb, 1.0);\n"
			"	outTexCoord  = texCoord;\n"
			"}\n"
		)
	)
	(this.buttonProgram.setFragmentShader
		(multistring
			"AVDL_IN vec4 outColour;\n"
			"AVDL_IN vec2 outTexCoord;\n"

			"uniform sampler2D image;\n"

			"void main() {\n"
			"	avdl_frag_color = outColour +avdl_texture(image, outTexCoord);\n"

			# For some reason the following line makes the shader to not compile on the following system:
			#  GeForce GTX 960/PCIe/SSE2
			#  GL version: 4.6.0 NVIDIA 456.71
			#  glsl version: 4.60 NVIDIA
			#"	avdl_frag_color = outColour;\n"
			"}\n"
		)
	)

	(= this.buttonClickCol[0] 0.389)
	(= this.buttonClickCol[1] 0.055)
	(= this.buttonClickCol[2] 0.682)

	(= this.buttonActiveCol[0] 0.916)
	(= this.buttonActiveCol[1] 0.516)
	(= this.buttonActiveCol[2] 0.074)

	(= this.buttonInactiveCol[0] 0.694)
	(= this.buttonInactiveCol[1] 0.137)
	(= this.buttonInactiveCol[2] 0.137)

	(= this.enabled 0)
	(= this.animationOpen 0)

	(this.hoverSound.load (asset "assets/button-hover.asset" DD_PLY) 0)
	(this.clickSmallSound.load (asset "assets/button_click_small.asset" DD_PLY) 0)
	(this.clickBigSound.load (asset "assets/button_click_big.asset" DD_PLY) 0)

	)
)

(class_function menu_stages void resize ()
	(group
	(for (def int i 0) (< i this.buttonTotal) (= i (+ i 1))
		(this.button[i].resize)
	)
	(this.textButton.resize)
	)
)

(class_function menu_stages void update ()
	(group

	# disabled and animated out, do not update
	(if (&& (== (this.isEnabled) 0) (< this.animationOpen 0.01)) (return))

	# animate opening/closing
	(if (this.isEnabled)
		#(= this.animationOpen (dd_math_ease_linear 0.05 this.animationOpen 1))
		(= this.animationOpen (dd_math_min (+ this.animationOpen 0.08) 1))
		(= this.animationOpen (dd_math_max (- this.animationOpen 0.08) 0))
		#(= this.animationOpen (dd_math_ease_linear 0.05 this.animationOpen 0))
	)

	# disabled do not calculate hovering buttons
	(if (== (this.isEnabled) 0) (return))

	# check if mouse is hovering over a button
	(for (def int i 0) (< i this.buttonTotal) (= i (+ i 1))
		(group

		(if (== this.selection i)
			(group
			)
			(if (this.button[i].hasMouseCollided)
				(group
				(this.hoverSound.play)
				(= this.selection i)
				)
			)
		)

		(this.button[i].update (== this.selection i) (== this.selectionClick i))

		)
	)

	)
) # update

(class_function menu_stages void draw ()
	(group

	# do not draw if animated out
	(if (< this.animationOpen 0.01) (return))

	# draw buttons
	(this.buttonProgram.useProgram)
	(def int colLoc)
	(= colLoc (avdl_getUniformLocation this.buttonProgram "tint"))
	(for (def int i 0) (< i this.buttonTotal) (= i (+ i 1))
		(group
		(dd_matrix_push)

		# change the shader colour when clicked
		(if (> this.button[i].idleCol 1.0)
			(avdl_setUniform3f colLoc
				(dd_math_ease_linear
					(- this.button[i].idleCol 1.0)
					this.buttonActiveCol[0] this.buttonClickCol[0]
				)
				(dd_math_ease_linear
					(- this.button[i].idleCol 1.0)
					this.buttonActiveCol[1] this.buttonClickCol[1]
				)
				(dd_math_ease_linear
					(- this.button[i].idleCol 1.0)
					this.buttonActiveCol[2] this.buttonClickCol[2]
				)
			)
		# change colour when selected
			(avdl_setUniform3f colLoc
				(dd_math_ease_linear this.button[i].idleCol this.buttonInactiveCol[0] this.buttonActiveCol[0])
				(dd_math_ease_linear this.button[i].idleCol this.buttonInactiveCol[1] this.buttonActiveCol[1])
				(dd_math_ease_linear this.button[i].idleCol this.buttonInactiveCol[2] this.buttonActiveCol[2])
			)
		)

		(this.button[i].applyTransform)
		(this.button[i].applyMatrixTransform)
		(def float anim)
		# big numbers make animation faster, but blends less together (max 4 - number of buttons)
		# small numbers make animation slower. At 1.0, all buttons animate together
		(def float animationSpeed 2.0)
		(def float animationSpeedMult (- 1.0 (/ 1.0 animationSpeed)))
		(= anim (dd_math_min
				(dd_math_max
					(* (- this.animationOpen (* (/ animationSpeedMult (- this.buttonTotal 1)) i)) animationSpeed)
					0
				)
				1
			)
		)
		(dd_scalef anim anim anim)
		(this.button[i].drawRaw)

		(dd_translatef 0 0 0.1)
		(dd_scalef 0.2 0.2 0.2)

		(if (&& (>= i 0) (< i 5))
			(if this.button[i].isDisabled
				(this.font.draw "locked")
				(this.font.drawInt i)
			)
		# else
			(this.font.draw "back")
		)

		(dd_matrix_pop)
		)
	)
	(avdl_useProgram 0)

	# draw button description
	(if (>= this.selection 0)
		(group
		(dd_matrix_push)
		(this.textButton.applyTransform)
		(this.textButton.applyMatrixTransform)
		(dd_translatef 0 0 0.1)
		(dd_scalef 0.2 0.2 0.2)
		(def float limit (* (dd_screen_width_get this.textButton.z) 1.8))
		(if 0#this.isMovingToNewWorld
			(this.font.drawLimit "loading" limit)
		(== this.selection 0)
			(if this.button[this.selection].isDisabled
				(this.font.drawLimit "play previous stage to unlock" limit)
				(this.font.drawLimit "stage 1" limit)
			)
		(== this.selection 1)
			(if this.button[this.selection].isDisabled
				(this.font.drawLimit "play previous stage to unlock" limit)
				(this.font.drawLimit "stage 2" limit)
			)
		(== this.selection 2)
			(if this.button[this.selection].isDisabled
				(this.font.drawLimit "play previous stage to unlock" limit)
				(this.font.drawLimit "stage 3" limit)
			)
		(== this.selection 3)
			(if this.button[this.selection].isDisabled
				(this.font.drawLimit "play previous stage to unlock" limit)
				(this.font.drawLimit "stage 4" limit)
			)
		(== this.selection 4)
			(if this.button[this.selection].isDisabled
				(this.font.drawLimit "play previous stage to unlock" limit)
				(this.font.drawLimit "stage 5" limit)
			)
#		(== this.selection 5)
#			(if this.button[this.selection].isDisabled
#				(this.font.drawLimit "play previous stage to unlock" limit)
#				(this.font.drawLimit "stage 6" limit)
#			)
			(this.font.drawLimit "back to main menu" limit)
		)

		(dd_matrix_pop)
		)
	)

	# draw version number
	(dd_matrix_push)
	(this.font.setAlign DD_STRING3D_ALIGN_RIGHT)
	(dd_translatef
		(/ (dd_screen_width_get 5) 2)
		(+ (/ (dd_screen_height_get 5) -2) 0.15)
		-5
	)
	(dd_scalef 0.15 0.15 0.15)
	(this.font.draw "alpha version")
	(this.font.setAlign DD_STRING3D_ALIGN_CENTER)
	(dd_matrix_pop)

	)
)

(class_function menu_stages void key_input (group char key)
	(group
	)
)

(class_function menu_stages void clean ()
	(group
	)
)

(class_function menu_stages int mouse_input (group int button int type)
	(group

	# re-check selection, this allows the user to directly click on a button
	# in a touch screen device
	(for (def int i 0) (< i this.buttonTotal) (= i (+ i 1))
		(group

		(if (this.button[i].hasMouseCollided)
			(group
			(= this.selection i)
			)
		)

		)
	)

	# control the camera look at point when click and dragging
	(if (== type DD_INPUT_MOUSE_TYPE_PRESSED)
		(group
		(if (&& (>= this.selection 0) (this.button[this.selection].hasMouseCollided))
			(= this.selectionClick this.selection)
		)
		)
	(== type DD_INPUT_MOUSE_TYPE_RELEASED)
		(group

		# clicked on a button
		(if (&& (== this.selection this.selectionClick)
			(>= this.selection 0) (this.button[this.selection].hasMouseCollided)
			(== this.button[this.selection].isDisabled 0))
			(group

			# stage 1
			(if (== this.selectionClick 0)
				(group

				(this.clickBigSound.play)

				# 2 enemies - both move rose one step
				(= numberOfPlayers 3)
				(= startingPlayer 0)
				(= guide 10)
				(= playerAi[1] 0)
				(= playerAi[2] 0)
				(= stageId 0)

				(this.disable)
				(return 1)
				)
			# stage 2
			(== this.selectionClick 1)
				(group

				(this.clickBigSound.play)

				# 3 enemies - all move rose one step
				(= numberOfPlayers 4)
				(= startingPlayer 0)
				(= guide -1)
				(= playerAi[1] 0)
				(= playerAi[2] 0)
				(= playerAi[3] 0)
				(= stageId 1)

				(this.disable)
				(return 1)
				)
			# stage 3
			(== this.selectionClick 2)
				(group

				(this.clickBigSound.play)

				# 2 enemies -
				# 2 move rose three steps
				(= numberOfPlayers 3)
				(= startingPlayer 0)
				(= guide 11)
				(= playerAi[1] 1)
				(= playerAi[2] 1)
				(= stageId 2)

				(this.disable)
				(return 1)
				)
			# stage 4
			(== this.selectionClick 3)
				(group

				(this.clickBigSound.play)

				# 3 enemies -
				# 2 move rose one step
				# 1 move rose three steps
				(= numberOfPlayers 4)
				(= startingPlayer 0)
				(= guide -1)
				(= playerAi[1] 0)
				(= playerAi[2] 0)
				(= playerAi[3] 1)
				(= stageId 3)

				(this.disable)
				(return 1)
				)
			# stage 5
			(== this.selectionClick 4)
				(group

				(this.clickBigSound.play)

				# 4 enemies -
				# 2 move rose one step
				# 2 move rose three steps
				(= numberOfPlayers 4)
				(= startingPlayer 0)
				(= guide -1)
				(= playerAi[1] 0)
				(= playerAi[2] 1)
				(= playerAi[3] 1)
				(= playerAi[4] 0)
				(= stageId 4)

				(this.disable)
				(return 1)
				)
#			# stage 6
#			(== this.selectionClick 5)
#				(group
#				(this.disable)
#				(return 1)
#				)
			# back to home menu
			(== this.selectionClick 5)
				(group
				(this.clickBigSound.play)
				(this.disable)
				(return -1)
				)
			)

			)
		)

		(= this.selectionClick -1)

		)
	) # mouse button released

	(return 0)

	)
) # mouse input

(class_function menu_stages int isEnabled ()
	(group
	(return this.enabled)
	)
)

(class_function menu_stages void enable ()
	(group
	(= this.enabled 1)
	(= this.selectionClick -1)
	)
)

(class_function menu_stages void disable ()
	(group
	(= this.enabled 0)
	)
)
