name: Create Build

on:
  push:
    branches:
      - develop
      - master
      - feature/github_build
  pull_request:
    branches:
      - develop
      - master

env:
  AVDL_BUILD_URL_LINUX: https://www.dropbox.com/s/yqt2z4st97heuhp/avdl_build_linux.zip
  AVDL_BUILD_URL_WINDOWS: https://www.dropbox.com/s/vh0ahvpqxbfo3rz/avdl_build_windows.zip

jobs:
  # Linux
  build_linux:
    runs-on: ubuntu-20.04
    steps:
    - name: update packages
      run: |
         sudo apt update && sudo apt install -y gcc libgl1-mesa-dev
    - name: init_rue
      uses: actions/checkout@v1
    - name: get_avdl
      run: |
        wget $AVDL_BUILD_URL_LINUX -O avdl_build_linux.zip
        mkdir AVDL_BUILD
        mv avdl_build_linux.zip AVDL_BUILD
        cd AVDL_BUILD
        unzip avdl_build_linux.zip
        cd ..
    - name: compile_rue
      run: |
        chmod +x AVDL_BUILD/bin/avdl
        ls AVDL_BUILD/dependencies/linux/lib
        make AVDL_BIN="AVDL_BUILD/bin/avdl" COMPILER_CUSTOM_FLAGS="-i AVDL_BUILD/include -i AVDL_BUILD/dependencies/linux/include" LINKER_CUSTOM_FLAGS="-L AVDL_BUILD/dependencies/linux/lib" assetdir=
        mkdir build/native/output/bin
        mv build/native/output/rue build/native/output/bin/
        echo "LD_LIBRARY_PATH=./dependencies/ ./bin/rue" > build/native/output/rue.sh
    - name: package
      run: |
        mkdir build/native/output/dependencies
        cp AVDL_BUILD/dependencies/linux/lib/*.so* build/native/output/dependencies
    - name: verify
      run: |
        cd build/native/output/
        echo "LD_LIBRARY_PATH=./dependencies/ ./bin/rue --verify" > build/native/output/rue-verify.sh
        chmod +x bin/rue rue.sh rue-verify.sh
        rm rue-verify.sh
        cp AVDL_BUILD/dependencies/linux/lib/*.so* build/native/output/dependencies
    - name: upload_artifact
      uses: actions/upload-artifact@v3
      with:
        name: rue_build_linux
        path: build/native/output
  # Linux Steam
  build_linux_steam:
    runs-on: ubuntu-20.04
    steps:
    - name: update packages
      run: |
         sudo apt update && sudo apt install -y gcc libgl1-mesa-dev
    - name: init_rue
      uses: actions/checkout@v1
    - name: get_avdl
      run: |
        wget $AVDL_BUILD_URL_LINUX -O avdl_build_linux.zip
        mkdir AVDL_BUILD
        mv avdl_build_linux.zip AVDL_BUILD
        cd AVDL_BUILD
        unzip avdl_build_linux.zip
        cd ..
    - name: compile_rue
      run: |
        chmod +x AVDL_BUILD/bin/avdl
        make AVDL_BIN="AVDL_BUILD/bin/avdl" COMPILER_CUSTOM_FLAGS="-i AVDL_BUILD/include -i AVDL_BUILD/dependencies/linux/include --steam" LINKER_CUSTOM_FLAGS="-L AVDL_BUILD/dependencies/linux/lib --steam" assetdir=
        mkdir build/native/output/bin
        mv build/native/output/rue build/native/output/bin/
        echo "LD_LIBRARY_PATH=./dependencies/ ./bin/rue" > build/native/output/rue.sh
    - name: package
      run: |
        mkdir build/native/output/dependencies
        cp AVDL_BUILD/dependencies/linux/lib/*.so build/native/output/dependencies
    - name: upload_artifact
      uses: actions/upload-artifact@v3
      with:
        name: rue_build_linux_steam
        path: build/native/output
  # Windows
  build_windows:
    runs-on: windows-latest
    steps:
    - name: init_rue
      uses: actions/checkout@v1
    - name: prepare_libraries
      shell: bash
      run: |
        mkdir libraries
    - name: get_avdl
      run: |
        C:\msys64\usr\bin\wget.exe -q $Env:AVDL_BUILD_URL_WINDOWS
    - name: unpack_avdl
      shell: bash
      run: |
        mkdir AVDL_BUILD
        mv avdl_build_windows.zip AVDL_BUILD
        cd AVDL_BUILD
        unzip avdl_build_windows.zip
        cp -r dependencies/windows/libpng ../libaries/
        cp -r dependencies/windows/zlib ../libaries/
        cd ..
    - name: zlib
      shell: bash
      run: |
        cp -r AVDL_BUILD/dependencies/windows/zlib "C:/Program Files (x86)/zlib"
    - name: libpng
      shell: bash
      run: |
        cp -r AVDL_BUILD/dependencies/windows/libpng "C:/Program Files (x86)/libpng"
    - name: get_libraries
      run: |
        C:\msys64\usr\bin\wget.exe -q https://github.com/nigels-com/glew/releases/download/glew-2.2.0/glew-2.2.0-win32.zip
        C:\msys64\usr\bin\wget.exe -q https://github.com/libsdl-org/SDL/releases/download/release-2.0.22/SDL2-devel-2.0.22-VC.zip
        C:\msys64\usr\bin\wget.exe -q https://github.com/libsdl-org/SDL_mixer/releases/download/release-2.6.0/SDL2_mixer-devel-2.6.0-VC.zip
    - name: glew
      shell: bash
      run: |
        mv glew-2.2.0-win32.zip libraries
        cd libraries
        unzip glew-2.2.0-win32.zip
        cd ..
    - name: sdl
      shell: bash
      run: |
        mv SDL2-devel-2.0.22-VC.zip libraries
        cd libraries
        unzip SDL2-devel-2.0.22-VC.zip
        cd ..
    - name: sdl_mixer
      shell: bash
      run: |
        mv SDL2_mixer-devel-2.6.0-VC.zip libraries
        cd libraries
        unzip SDL2_mixer-devel-2.6.0-VC.zip
        cd ..
    - name: compile_rue
      shell: bash
      run: |
        mkdir cengine
        cp -r AVDL_BUILD/share/avdl/cengine/*.c AVDL_BUILD/include/*.h cengine
        mkdir build
        for i in src/*.dd; do AVDL_BUILD/bin/avdl.exe -t -I include/ $i -o ${i/.dd/.c}; echo $i; done
        cd build
        cmake ../ . -DCMAKE_INSTALL_PREFIX="RUE_BUILD"
        cmake --build . --config Release
        cmake --install .
        cd ..
    - name: upload_artifact
      uses: actions/upload-artifact@v3
      with:
        name: rue_build_windows
        path: build/RUE_BUILD
  # Windows Steam
  build_windows_steam:
    runs-on: windows-latest
    steps:
    - name: init_rue
      uses: actions/checkout@v1
    - name: prepare_libraries
      shell: bash
      run: |
        mkdir libraries
    - name: get_avdl
      run: |
        C:\msys64\usr\bin\wget.exe -q $Env:AVDL_BUILD_URL_WINDOWS
    - name: unpack_avdl
      shell: bash
      run: |
        mkdir AVDL_BUILD
        mv avdl_build_windows.zip AVDL_BUILD
        cd AVDL_BUILD
        unzip avdl_build_windows.zip
        cp -r dependencies/windows/libpng ../libaries/
        cp -r dependencies/windows/zlib ../libaries/
        cd ..
    - name: zlib
      shell: bash
      run: |
        cp -r AVDL_BUILD/dependencies/windows/zlib "C:/Program Files (x86)/zlib"
    - name: libpng
      shell: bash
      run: |
        cp -r AVDL_BUILD/dependencies/windows/libpng "C:/Program Files (x86)/libpng"
    - name: get_libraries
      run: |
        C:\msys64\usr\bin\wget.exe -q https://github.com/nigels-com/glew/releases/download/glew-2.2.0/glew-2.2.0-win32.zip
        C:\msys64\usr\bin\wget.exe -q https://github.com/libsdl-org/SDL/releases/download/release-2.0.22/SDL2-devel-2.0.22-VC.zip
        C:\msys64\usr\bin\wget.exe -q https://github.com/libsdl-org/SDL_mixer/releases/download/release-2.6.0/SDL2_mixer-devel-2.6.0-VC.zip
    - name: glew
      shell: bash
      run: |
        mv glew-2.2.0-win32.zip libraries
        cd libraries
        unzip glew-2.2.0-win32.zip
        cd ..
    - name: sdl
      shell: bash
      run: |
        mv SDL2-devel-2.0.22-VC.zip libraries
        cd libraries
        unzip SDL2-devel-2.0.22-VC.zip
        cd ..
    - name: sdl_mixer
      shell: bash
      run: |
        mv SDL2_mixer-devel-2.6.0-VC.zip libraries
        cd libraries
        unzip SDL2_mixer-devel-2.6.0-VC.zip
        cd ..
    - name: compile_rue
      shell: bash
      run: |
        mkdir cengine
        cp -r AVDL_BUILD/share/avdl/cengine/*.c AVDL_BUILD/share/avdl/cengine/*.cpp AVDL_BUILD/include/*.h cengine
        mkdir build
        for i in src/*.dd; do AVDL_BUILD/bin/avdl.exe -t -I include/ $i -o ${i/.dd/.c}; echo $i; done
        cd build
        cmake ../ . -DCMAKE_INSTALL_PREFIX="RUE_BUILD" -DAVDL_STEAM=1
        cmake --build . --config Release
        cmake --install .
        cd ..
    - name: upload_artifact
      uses: actions/upload-artifact@v3
      with:
        name: rue_build_windows_steam
        path: build/RUE_BUILD
