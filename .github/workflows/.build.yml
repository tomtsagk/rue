name: Create Build

on:
  push:
    branches:
      - develop
      - master
      - feature/github_build
  pull_request:
    branches:
      - develop
      - master

jobs:
#  build_linux:
#    runs-on: ubuntu-latest
#    steps:
#    - name: update packages
#      run: |
#         sudo apt update && sudo apt install -y gcc libgl1-mesa-dev
#    - name: init_rue
#      uses: actions/checkout@v1
#    - name: get_avdl
#      run: |
#        wget https://www.dropbox.com/s/hfmihrew70bcls4/avdl_build.zip -O avdl_build.zip
#        mkdir AVDL_BUILD
#        mv avdl_build.zip AVDL_BUILD
#        cd AVDL_BUILD
#        unzip avdl_build.zip
#        cd ..
#    - name: compile_rue
#      run: |
#        chmod +x AVDL_BUILD/bin/avdl
#        sudo cp AVDL_BUILD/include/* /usr/include
#        sudo cp AVDL_BUILD/dependencies/lib/*.so* /usr/lib
#        sudo ln -s /usr/lib/libSDL2-2.0.so.0 /usr/lib/libSDL2.so
#        sudo ln -s /usr/lib/libSDL2_mixer-2.0.so.0 /usr/lib/libSDL2_mixer.so
#        #cp -r ${HOME}/AVDL_BUILD AVDL_BUILD
#        make AVDL_BIN="AVDL_BUILD/bin/avdl" COMPILER_CUSTOM_FLAGS="-i AVDL_BUILD/dependencies/include" LINKER_CUSTOM_FLAGS="-L AVDL_BUILD/dependencies/lib -L AVDL_BUILD/dependencies/lib64" assetdir=
#        mkdir build/native/output/bin
#        mv build/native/output/rue build/native/output/bin/
#        echo "LD_LIBRARY_PATH=./dependencies/ ./bin/rue" > build/native/output/rue.sh
#    - name: package
#      run: |
#        mkdir build/native/output/dependencies
#        cp AVDL_BUILD/dependencies/lib/*.so* build/native/output/dependencies
#    - name: upload_artifact
#      uses: actions/upload-artifact@v3
#      with:
#        name: rue_build_linux
#        path: build/native/output
#  build_linux_steam:
#    runs-on: ubuntu-latest
#    steps:
#    - name: update packages
#      run: |
#         sudo apt update && sudo apt install -y gcc libgl1-mesa-dev
#    - name: init_rue
#      uses: actions/checkout@v1
#    - name: get_avdl
#      run: |
#        wget https://www.dropbox.com/s/hfmihrew70bcls4/avdl_build.zip -O avdl_build.zip
#        mkdir AVDL_BUILD
#        mv avdl_build.zip AVDL_BUILD
#        cd AVDL_BUILD
#        unzip avdl_build.zip
#        cd ..
#    - name: compile_rue
#      run: |
#        chmod +x AVDL_BUILD/bin/avdl
#        sudo cp AVDL_BUILD/include/* /usr/include
#        sudo cp AVDL_BUILD/dependencies/lib/*.so* /usr/lib
#        sudo ln -s /usr/lib/libSDL2-2.0.so.0 /usr/lib/libSDL2.so
#        sudo ln -s /usr/lib/libSDL2_mixer-2.0.so.0 /usr/lib/libSDL2_mixer.so
#        make AVDL_BIN="AVDL_BUILD/bin/avdl" COMPILER_CUSTOM_FLAGS="-i AVDL_BUILD/dependencies/include --steam" LINKER_CUSTOM_FLAGS="-L AVDL_BUILD/dependencies/lib -L AVDL_BUILD/dependencies/lib64 --steam -i AVDL_BUILD/dependencies/steamworks/public/steam -L AVDL_BUILD/dependencies/steamworks/redistributable_bin/linux64/" assetdir=
#        mkdir build/native/output/bin
#        mv build/native/output/rue build/native/output/bin/
#        echo "LD_LIBRARY_PATH=./dependencies/ ./bin/rue" > build/native/output/rue.sh
#    - name: package
#      run: |
#        mkdir build/native/output/dependencies
#        cp AVDL_BUILD/dependencies/lib/*.so* build/native/output/dependencies
#        cp AVDL_BUILD/dependencies/steamworks/redistributable_bin/linux64/* build/native/output/dependencies
#    - name: upload_artifact
#      uses: actions/upload-artifact@v3
#      with:
#        name: rue_build_linux_steam
#        path: build/native/output
  build_windows:
    runs-on: windows-latest
    steps:
    - name: init_rue
      uses: actions/checkout@v1
    - name: get_glew
      run: |
        C:\msys64\usr\bin\wget.exe -q https://github.com/nigels-com/glew/releases/download/glew-2.2.0/glew-2.2.0-win32.zip
    - name: glew
      shell: bash
      run: |
        unzip glew-2.2.0-win32.zip
    - name: get_avdl
      run: |
        C:\msys64\usr\bin\wget.exe -q https://www.dropbox.com/s/7f9a02ddzro274j/avdl_build_windows.zip
    - name: unpack_avdl
      shell: bash
      run: |
        mkdir AVDL_BUILD
        mv avdl_build_windows.zip AVDL_BUILD
        cd AVDL_BUILD
        unzip avdl_build_windows.zip
        cd ..
    - name: compile_rue
      shell: bash
      run: |
        mkdir cengine
        cp -r AVDL_BUILD/share/avdl/cengine/*.c AVDL_BUILD/include/*.h cengine
        #cp -r AVDL_BUILD/engines/cengine/src/*.c AVDL_BUILD/engines/cengine/include/*.h ../cengine
        mkdir build
        for i in src/*.dd; do AVDL_BUILD/bin/avdl.exe -t -I include/ $i -o ${i/.dd/.c}; echo $i; done
        cd build
        #cmake ../ . -DCMAKE_INSTALL_PREFIX="C:/Program Files/rue_install"
        cmake ../ . -DCMAKE_INSTALL_PREFIX="RUE_BUILD"
        cmake --build . --config Release
        cmake --install .
        cd ..
        #7z a -tzip "$1" "C:/Program Files/rue_install/*" -r
        #chmod +x AVDL_BUILD/bin/avdl
        #sudo cp AVDL_BUILD/include/* /usr/include
        #sudo cp AVDL_BUILD/dependencies/lib/*.so* /usr/lib
        #sudo ln -s /usr/lib/libSDL2-2.0.so.0 /usr/lib/libSDL2.so
        #sudo ln -s /usr/lib/libSDL2_mixer-2.0.so.0 /usr/lib/libSDL2_mixer.so
        #cp -r ${HOME}/AVDL_BUILD AVDL_BUILD
        #make AVDL_BIN="AVDL_BUILD/bin/avdl" COMPILER_CUSTOM_FLAGS="-i AVDL_BUILD/dependencies/include" LINKER_CUSTOM_FLAGS="-L AVDL_BUILD/dependencies/lib -L AVDL_BUILD/dependencies/lib64" assetdir=
        #mkdir build/native/output/bin
        #mv build/native/output/rue build/native/output/bin/
        #echo "LD_LIBRARY_PATH=./dependencies/ ./bin/rue" > build/native/output/rue.sh
#    - name: package
#      run: |
#        mkdir build/native/output/dependencies
#        cp AVDL_BUILD/dependencies/lib/*.so* build/native/output/dependencies
    - name: upload_artifact
      uses: actions/upload-artifact@v3
      with:
        name: rue_build_windows
        path: RUE_BUILD
